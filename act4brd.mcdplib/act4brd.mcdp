mcdp {
    # Functionalities of outside "big" DP
    provides satisfied_demand [`satisfied_demand]

    # Requirements of outside "big" DP
    requires total_cost [$]
    requires dissatisfaction_level [Reals]
    requires total_emissions [kg/year]
       
    # Import DPs from the project
    dp_fleet = instance `fleet
    dp_guideline = instance `guideline
    dp_customer_experience = instance `customer_experience
    dp_service_network_design = instance `service_network_design

    # Compute total cost
    constant operator_unit_cost = 1000 USD
    cap_op_cost = total_num_operators required by dp_fleet * operator_unit_cost + total_capital_cost required by dp_fleet
    
    # Connection between the summation of costs and outside "big" DP
    required total_cost >= cap_op_cost

    # Put a requirement on the cost to be limited by the ROI from dp_guideline
    cap_op_cost <= roi provided by dp_guideline

    # Connection of satisfied demand with the guidelines
    satisfied_demand provided by dp_service_network_design >= satisfied_demand required by dp_guideline

    # Connection between service network design and fleet
    composition required by dp_service_network_design <= composition provided by dp_fleet

    # Connection between service network design and customer customer experience
    avg_travel_time required by dp_service_network_design <= avg_travel_time provided by dp_customer_experience
    avg_discomfort_level required by dp_service_network_design <= avg_discomfort_level provided by dp_customer_experience
    avg_transfers required by dp_service_network_design <= avg_transfers provided by dp_customer_experience
    avg_hops required by dp_service_network_design <= avg_hops provided by dp_customer_experience

    # Connection between customer experience and outside "big" DP
    required dissatisfaction_level >= dissatisfaction_level required by  dp_customer_experience

    # Connection between service_network_design and outside "big" DP
    required total_emissions >= total_emissions required by dp_service_network_design
    provided satisfied_demand <= satisfied_demand provided by dp_service_network_design
}

